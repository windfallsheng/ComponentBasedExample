//apply from: "${rootProject.rootDir}/config.gradle"
if (compileSeparetelyHomeModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        if (compileSeparetelyHomeModule.toBoolean()) {
            applicationId "com.windfallsheng.modulehome"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        这个配置只能限制xml文件里的资源，对于图片资源还是通过命名区别；
        resourcePrefix "home_"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
  （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (compileSeparetelyHomeModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
    /*sourceSets {
        main {
            if (compileSeparetelyHomeModule.toBoolean()) {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
                res.srcDirs = ['src/debug/res', 'src/main/res']
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //排除java/debug文件夹下的所有文件
                    exclude 'src/debug/*'
                }
            }
        }
    }*/

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test-runner"]
    androidTestImplementation rootProject.ext.dependencies["test-espresso-core"]

    implementation rootProject.ext.dependencies["appcompat-v7"]

    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["eventbus"]

    implementation project(':lib_base')
    implementation project(':lib_res')
//    方式一：
//    if(mode_debug){
//        implementation project(':lib_debug')
//    }else{
//        implementation project(':lib_release')
//    }
//    方式二：
//    debugImplementation project(':lib_debug')
//    releaseImplementation project(':lib_release')
}
